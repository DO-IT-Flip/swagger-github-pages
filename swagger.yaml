---
openapi: 3.0.1
info:
  title: Flip API 명세서
  description: 일정 서비스 Flip의 API 문서입니다.
  version: v1.0.0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Auth API
  description: 유저 인증 관련 API
- name: User API
  description: 태그 관련 API
- name: Schedule API
  description: 일정 관련 API
- name: Tag API
  description: 태그 관련 API
- name: Icon API
  description: 아이콘 관련 API
paths:
  "/api/tags/{tagId}":
    put:
      tags:
      - Tag API
      summary: 태그 상세 조회
      operationId: updateTag
      parameters:
      - name: tagId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/TagResponse"
    delete:
      tags:
      - Tag API
      summary: 태그 삭제
      operationId: deleteTag
      parameters:
      - name: tagId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
  "/api/tags":
    get:
      tags:
      - Tag API
      summary: 태그 전체 조회
      operationId: getAllTags
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TagResponse"
    post:
      tags:
      - Tag API
      summary: 태그 생성
      operationId: createTag
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TagRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/TagResponse"
  "/api/schedules":
    get:
      tags:
      - Schedule API
      summary: 일정 조회
      description: 특정 날짜(year, month, day)로 필터링
      operationId: getAllSchedules
      parameters:
      - name: year
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: month
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: day
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ScheduleResponse"
    post:
      tags:
      - Schedule API
      summary: 일정 생성
      operationId: createSchedule
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ScheduleRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ScheduleResponse"
  "/api/auth/signup":
    post:
      tags:
      - Auth API
      summary: 회원가입
      description: 유저 정보를 바탕으로 DB에 저장하여 회원가입합니다.
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignupRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/auth/reissue":
    post:
      tags:
      - Auth API
      summary: Access token 재발급
      description: Access token 만료 시 Refresh token 으로 재발급
      operationId: reissue
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/auth/logout":
    post:
      tags:
      - Auth API
      summary: 로그아웃
      description: 리프레시 토큰을 만료시키고 로그아웃 처리합니다.
      operationId: logout
      responses:
        '200':
          description: OK
  "/api/auth/login":
    post:
      tags:
      - Auth API
      summary: 로그인
      description: 아이디와 비밀번호로 로그인을 시도합니다. JWT 토큰을 반환합니다.
      operationId: login
      responses:
        '200':
          description: OK
  "/api/schedules/{scheduleId}":
    delete:
      tags:
      - Schedule API
      summary: 일정 삭제
      operationId: deleteSchedule
      parameters:
      - name: scheduleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: OK
    patch:
      tags:
      - Schedule API
      summary: 일정 수정
      operationId: updateSchedule
      parameters:
      - name: scheduleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ScheduleRequest"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/ScheduleResponse"
  "/api/schedules/search":
    get:
      tags:
      - Schedule API
      summary: 일정 검색
      description: 특정 키워드로 일정 검색
      operationId: searchSchedules
      parameters:
      - name: keyword
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ScheduleResponse"
  "/api/icons":
    get:
      tags:
      - Icon API
      summary: 모든 아이콘 조회
      operationId: getAllIcons
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Icon"
  "/api/auth/me":
    get:
      tags:
      - User API
      summary: 내 정보 조회
      description: 현재 접속 중인 유저의 정보를 JWT 토큰을 통해 반환합니다.
      operationId: getMyInfo
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/UserInfoResponse"
components:
  schemas:
    TagRequest:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
        iconId:
          type: integer
          format: int64
    TagResponse:
      type: object
      properties:
        tagId:
          type: integer
          format: int64
        name:
          type: string
        color:
          type: string
        iconId:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    ScheduleRequest:
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        startTime:
          "$ref": "#/components/schemas/LocalTime"
        endTime:
          "$ref": "#/components/schemas/LocalTime"
        title:
          type: string
        location:
          type: string
        participants:
          type: string
        tagId:
          type: integer
          format: int64
        color:
          type: string
        iconId:
          type: integer
          format: int64
        isRepeat:
          type: boolean
        isExistTag:
          type: boolean
    ScheduleResponse:
      type: object
      properties:
        scheduleId:
          type: integer
          format: int64
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        title:
          type: string
        location:
          type: string
        participants:
          type: string
        color:
          type: string
        iconId:
          type: integer
          format: int64
        tagId:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        existTag:
          type: boolean
        repeat:
          type: boolean
    SignupRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
    Icon:
      type: object
      properties:
        iconId:
          type: integer
          format: int64
        name:
          type: string
    UserInfoResponse:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
          - USER
          - ADMIN
        theme:
          type: string
          enum:
          - red
          - orange
          - yellow
          - green
          - mint
          - blue
          - navy
          - purple
          - violet
          - pink
          - aqua
          - black
